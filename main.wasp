app CloudStorageApp {
  wasp: {
    version: "^0.11.4"
  },
  title: "CloudStorageApp",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    files    File[]
psl=}

entity File {=psl
    id         Int      @id @default(autoincrement())
    name       String
    fileType   String
    uploadTime DateTime @default(now())
    expiryTime DateTime
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action uploadFile {
  fn: import { uploadFile } from "@server/actions.js",
  entities: [File]
}

action deleteExpiredFiles {
  fn: import { deleteExpiredFiles } from "@server/actions.js",
  entities: [File]
}

query getUserFiles {
  fn: import { getUserFiles } from "@server/queries.js",
  entities: [File]
}

route MyFilesRoute { path: "/myfiles", to: MyFilesPage }
page MyFilesPage {
  component: import { MyFiles } from "@client/pages/MyFiles.jsx",
  authRequired: true
}

route UploadRoute { path: "/upload", to: UploadPage }
page UploadPage {
  component: import { UploadPage } from "@client/pages/Upload.jsx",
  authRequired: true
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: false
}
